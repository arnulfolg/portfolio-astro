---
import './../styles/components/Header.css'
import LocaleButton from "./buttons/LocaleButton.astro";
import ThemeButton from "./buttons/ThemeButton.astro";
import { getContentHeader, getContentTitles } from '../scripts/getContent';
import type { CVHeading } from '../scripts/Interfaces/HeaderInterfaces';
import type { CVTitles } from '../scripts/Interfaces/TitlesInterfaces';
import { getLocaleAndLang } from '../scripts/getLocaleAndLang';
import { isPathRoot } from '../scripts/isPathRoot';

const { pathname } = Astro.url

const [language, locale] = getLocaleAndLang(pathname)

const languageText: CVHeading = await getContentHeader('ryPXmqgWyGKZKVNpevKXS', locale)
const darkThemeText: CVHeading = await getContentHeader('rTtf5I7pfOcYV5iYDdpUR', locale)
const lightThemeText: CVHeading = await getContentHeader('79Dm3OEJSUvlbDonKZs8RN', locale)
const titleThemeText: CVHeading = await getContentHeader('6dlytuU9sR8iSeGLTvkV0t', locale)
const systemText: CVHeading = await getContentHeader('46KujCrjVBmOk934heQA2', locale)

const entries: CVTitles = await getContentTitles(locale)


---

<header class={isPathRoot(pathname) ? "header" : "header header_compact"}>
	{entries.items.map((item) => (
		<section class="titles">
			<a href="/">
				<h1>{item.fields.title}</h1>
			</a>
			<p class="subtitle">{item.fields.tagline}</p>
		</section>
		<ul class="controls">
			<li>
				<ThemeButton 
					title={titleThemeText.fields.heading}
					system={systemText.fields.heading}
					dark={darkThemeText.fields.heading} 
					light={lightThemeText.fields.heading} />
			</li>
			<li>
				<LocaleButton language={language === "en" ? "es" : "en"} text={languageText.fields.heading} pathname={pathname} />
			</li>
		</ul>
	))}

</header>